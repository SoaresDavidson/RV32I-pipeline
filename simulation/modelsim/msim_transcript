# Reading pref.tcl
# do R232i_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Copying C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:36 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v 
# -- Compiling module ULA_controler
# 
# Top level modules:
# 	ULA_controler
# End time: 16:46:36 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:36 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v 
# -- Compiling module main_memory
# 
# Top level modules:
# 	main_memory
# End time: 16:46:36 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:36 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v 
# -- Compiling module MEM_WB
# 
# Top level modules:
# 	MEM_WB
# End time: 16:46:36 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:36 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v 
# -- Compiling module instruction_memory
# 
# Top level modules:
# 	instruction_memory
# End time: 16:46:36 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:36 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v 
# -- Compiling module hazard_detection_unit
# 
# Top level modules:
# 	hazard_detection_unit
# End time: 16:46:36 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:36 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v 
# -- Compiling module EX_MEM
# 
# Top level modules:
# 	EX_MEM
# End time: 16:46:37 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:37 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v 
# -- Compiling module ULA
# 
# Top level modules:
# 	ULA
# End time: 16:46:37 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:37 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v 
# -- Compiling module forward_unit
# 
# Top level modules:
# 	forward_unit
# End time: 16:46:37 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:37 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v 
# -- Compiling module register_bank
# 
# Top level modules:
# 	register_bank
# End time: 16:46:37 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:37 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v 
# -- Compiling module BranchDecider
# 
# Top level modules:
# 	BranchDecider
# End time: 16:46:37 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:38 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v 
# -- Compiling module ID_EX
# 
# Top level modules:
# 	ID_EX
# End time: 16:46:38 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:38 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v 
# -- Compiling module RV32i
# 
# Top level modules:
# 	RV32i
# End time: 16:46:38 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:38 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v 
# -- Compiling module IF_ID
# 
# Top level modules:
# 	IF_ID
# End time: 16:46:38 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:38 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v 
# -- Compiling module control
# 
# Top level modules:
# 	control
# End time: 16:46:38 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:39 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v 
# -- Compiling module PC
# 
# Top level modules:
# 	PC
# End time: 16:46:39 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:46:39 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v 
# -- Compiling module tb_RV32i
# 
# Top level modules:
# 	tb_RV32i
# End time: 16:46:39 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs="+acc"  tb_RV32i
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs=""+acc"" tb_RV32i 
# Start time: 16:46:39 on Oct 30,2025
# Loading work.tb_RV32i
# Loading work.RV32i
# Loading work.PC
# Loading work.instruction_memory
# Loading work.IF_ID
# Loading work.control
# Loading work.hazard_detection_unit
# Loading work.register_bank
# Loading work.BranchDecider
# Loading work.ID_EX
# Loading work.forward_unit
# Loading work.ULA_controler
# Loading work.ULA
# Loading work.EX_MEM
# Loading work.main_memory
# Loading work.MEM_WB
# 
# add wave *
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: davi5  Hostname: DAVIALIENWARE  ProcessID: 25444
#           Attempting to use alternate WLF file "./wlft0ridki".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlft0ridki
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# 
# //--------------------[ CICLO @ 20000 ]--------------------//
# PC: 00000000   |   Instruction: 00400093
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 30000 ]--------------------//
# PC: 00000004   |   Instruction: 00200113
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  1, rs1:  0, rs2:  4
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000004
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: xxxxxxxx
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 40000 ]--------------------//
# PC: 00000008   |   Instruction: 002081b3
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  2, rs1:  0, rs2:  2
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000002
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 50000 ]--------------------//
# PC: 0000000c   |   Instruction: 28110233
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  3, rs1:  1, rs2:  2
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  2 | imm: 00000002 | pc: 00000004
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          2
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 60000 ]--------------------//
# PC: 00000010   |   Instruction: 00414013
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  4, rs1:  2, rs2:  1
#        Funct3: 000  | Funct7: 0010100 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  3 | imm: 00000000 | pc: 00000008
#        Forward -> Fwd_A: 01, Fwd_B: 10
#        ULA Out -> C:          6
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          2 | val_B:          0 | rd:  2
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 70000 ]--------------------//
# PC: 00000014   |   Instruction: 0020a023
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  0, rs1:  2, rs2:  4
#        Funct3: 100  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000004
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  4 | imm: 00000000 | pc: 0000000c
#        Forward -> Fwd_A: 01, Fwd_B: 00
#        ULA Out -> C:          2
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          6 | val_B:          0 | rd:  3
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          2 | Mem_Data:          0 | rd:  2
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 80000 ]--------------------//
# PC: 00000018   |   Instruction: 00a08383
# -----------------------------------------------------------------
#   [ID] Opcode: 0100011 | tipo: S | rd:  0, rs1:  1, rs2:  2
#        Funct3: 010  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          4 | B:          2
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000004 | pc: 00000010
#        Forward -> Fwd_A: 00, Fwd_B: 10
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          2 | val_B:          0 | rd:  4
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          6 | Mem_Data:          0 | rd:  3
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 2 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 90000 ]--------------------//
# PC: 0000001c   |   Instruction: 00000033
# -----------------------------------------------------------------
#   [ID] Opcode: 0000011 | tipo: I | rd:  7, rs1:  1, rs2: 10
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          4 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 1, MuxReg: 1, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          4 | val_B:          2 | rd:  0 | imm: 00000000 | pc: 00000014
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          2 | Mem_Data:          0 | rd:  4
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 2 reg3: 6 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 100000 ]--------------------//
# PC: 00000020   |   Instruction: 00000033
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          4 | val_B:          0 | rd:  7 | imm: 0000000a | pc: 00000018
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         14
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 1, MuxReg: 1
#         Data    -> ULA_Res:          4 | val_B:          2 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 2 reg3: 6 reg4: 2 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 110000 ]--------------------//
# PC: 00000024   |   Instruction: 00000033
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 0000001c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1
#         Data    -> ULA_Res:         14 | val_B:          0 | rd:  7
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 1
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 2 reg3: 6 reg4: 2 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 2 mem5: 0 mem6: 0, mem7: 0, mem8: 0
# 
# //--------------------[ CICLO @ 120000 ]--------------------//
# PC: 00000028   |   Instruction: 00000033
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000020
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 1
#        Data    -> ULA_Res:         14 | Mem_Data:          0 | rd:  7
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 2 reg3: 6 reg4: 2 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 2 mem5: 0 mem6: 0, mem7: 0, mem8: 0
# 
# //--------------------[ CICLO @ 130000 ]--------------------//
# PC: 0000002c   |   Instruction: 00000033
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000024
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 2 reg3: 6 reg4: 2 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 2 mem5: 0 mem6: 0, mem7: 0, mem8: 0
# 
# //--------------------[ CICLO @ 140000 ]--------------------//
# PC: 00000030   |   Instruction: 00c00093
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000028
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 2 reg3: 6 reg4: 2 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 2 mem5: 0 mem6: 0, mem7: 0, mem8: 0
# 
# //--------------------[ CICLO @ 150000 ]--------------------//
# PC: 00000034   |   Instruction: 00500113
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  1, rs1:  0, rs2: 12
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000c
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 0000002c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 2 reg3: 6 reg4: 2 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 2 mem5: 0 mem6: 0, mem7: 0, mem8: 0
# 
# //--------------------[ CICLO @ 160000 ]--------------------//
# PC: 00000038   |   Instruction: 00e0b113
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  2, rs1:  0, rs2:  5
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000005
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 0000000c | pc: 00000030
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         12
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 2 reg3: 6 reg4: 2 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 2 mem5: 0 mem6: 0, mem7: 0, mem8: 0
# 
# //--------------------[ CICLO @ 170000 ]--------------------//
# PC: 0000003c   |   Instruction: 00313213
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  2, rs1:  1, rs2: 14
#        Funct3: 011  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000e
#        RegBank Read -> A:          4 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  2 | imm: 00000005 | pc: 00000034
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          5
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         12 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 2 reg3: 6 reg4: 2 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 2 mem5: 0 mem6: 0, mem7: 0, mem8: 0
# 
# //--------------------[ CICLO @ 180000 ]--------------------//
# PC: 00000040   |   Instruction: 00914293
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  4, rs1:  2, rs2:  3
#        Funct3: 011  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000003
#        RegBank Read -> A:          2 | B:          6
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          4 | val_B:          0 | rd:  2 | imm: 0000000e | pc: 00000038
#        Forward -> Fwd_A: 01, Fwd_B: 00
#        ULA Out -> C:          1
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          5 | val_B:          0 | rd:  2
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         12 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 2 reg3: 6 reg4: 2 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 2 mem5: 0 mem6: 0, mem7: 0, mem8: 0
# 
# //--------------------[ CICLO @ 190000 ]--------------------//
# PC: 00000044   |   Instruction: 00000033
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  5, rs1:  2, rs2:  9
#        Funct3: 100  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000009
#        RegBank Read -> A:          2 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          2 | val_B:          6 | rd:  4 | imm: 00000003 | pc: 0000003c
#        Forward -> Fwd_A: 10, Fwd_B: 00
#        ULA Out -> C:          1
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          1 | val_B:          0 | rd:  2
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          5 | Mem_Data:          0 | rd:  2
# -----------------------------------------------------------------
# reg0: 0 reg1: 12 reg2: 2 reg3: 6 reg4: 2 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 2 mem5: 0 mem6: 0, mem7: 0, mem8: 0
# 
# //--------------------[ CICLO @ 200000 ]--------------------//
# PC: 00000048   |   Instruction: 00000033
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          2 | val_B:          0 | rd:  5 | imm: 00000009 | pc: 00000040
#        Forward -> Fwd_A: 01, Fwd_B: 00
#        ULA Out -> C:          8
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          1 | val_B:          6 | rd:  4
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          1 | Mem_Data:          0 | rd:  2
# -----------------------------------------------------------------
# reg0: 0 reg1: 12 reg2: 5 reg3: 6 reg4: 2 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 2 mem5: 0 mem6: 0, mem7: 0, mem8: 0
# 
# //--------------------[ CICLO @ 210000 ]--------------------//
# PC: 0000004c   |   Instruction: 00000033
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000044
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          8 | val_B:          0 | rd:  5
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          1 | Mem_Data:          0 | rd:  4
# -----------------------------------------------------------------
# reg0: 0 reg1: 12 reg2: 1 reg3: 6 reg4: 2 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 2 mem5: 0 mem6: 0, mem7: 0, mem8: 0
# 
# //--------------------[ CICLO @ 220000 ]--------------------//
# PC: 00000050   |   Instruction: 00000033
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000048
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          8 | Mem_Data:          0 | rd:  5
# -----------------------------------------------------------------
# reg0: 0 reg1: 12 reg2: 1 reg3: 6 reg4: 1 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 2 mem5: 0 mem6: 0, mem7: 0, mem8: 0
# 
# --- Simulação Finalizada ---
# ** Note: $finish    : C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v(58)
#    Time: 230 ns  Iteration: 0  Instance: /tb_RV32i
# 1
# Break in Module tb_RV32i at C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v line 58
do R232i_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work".
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:19 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v 
# -- Compiling module ULA_controler
# 
# Top level modules:
# 	ULA_controler
# End time: 16:49:19 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:19 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v 
# -- Compiling module main_memory
# 
# Top level modules:
# 	main_memory
# End time: 16:49:19 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:19 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v 
# -- Compiling module MEM_WB
# 
# Top level modules:
# 	MEM_WB
# End time: 16:49:19 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:19 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v 
# -- Compiling module instruction_memory
# 
# Top level modules:
# 	instruction_memory
# End time: 16:49:19 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:20 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v 
# -- Compiling module hazard_detection_unit
# 
# Top level modules:
# 	hazard_detection_unit
# End time: 16:49:20 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:20 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v 
# -- Compiling module EX_MEM
# 
# Top level modules:
# 	EX_MEM
# End time: 16:49:20 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:20 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v 
# -- Compiling module ULA
# 
# Top level modules:
# 	ULA
# End time: 16:49:20 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:20 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v 
# -- Compiling module forward_unit
# 
# Top level modules:
# 	forward_unit
# End time: 16:49:20 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:20 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v 
# -- Compiling module register_bank
# 
# Top level modules:
# 	register_bank
# End time: 16:49:21 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:21 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v 
# -- Compiling module BranchDecider
# 
# Top level modules:
# 	BranchDecider
# End time: 16:49:21 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:21 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v 
# -- Compiling module ID_EX
# 
# Top level modules:
# 	ID_EX
# End time: 16:49:21 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:21 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v 
# -- Compiling module RV32i
# 
# Top level modules:
# 	RV32i
# End time: 16:49:21 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:21 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v 
# -- Compiling module IF_ID
# 
# Top level modules:
# 	IF_ID
# End time: 16:49:21 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:22 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v 
# -- Compiling module control
# 
# Top level modules:
# 	control
# End time: 16:49:22 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:22 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v 
# -- Compiling module PC
# 
# Top level modules:
# 	PC
# End time: 16:49:22 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:49:22 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v 
# -- Compiling module tb_RV32i
# 
# Top level modules:
# 	tb_RV32i
# End time: 16:49:22 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs="+acc"  tb_RV32i
# End time: 16:49:25 on Oct 30,2025, Elapsed time: 0:02:46
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs=""+acc"" tb_RV32i 
# Start time: 16:49:25 on Oct 30,2025
# Loading work.tb_RV32i
# Loading work.RV32i
# Loading work.PC
# Loading work.instruction_memory
# Loading work.IF_ID
# Loading work.control
# Loading work.hazard_detection_unit
# Loading work.register_bank
# Loading work.BranchDecider
# Loading work.ID_EX
# Loading work.forward_unit
# Loading work.ULA_controler
# Loading work.ULA
# Loading work.EX_MEM
# Loading work.main_memory
# Loading work.MEM_WB
# 
# add wave *
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: davi5  Hostname: DAVIALIENWARE  ProcessID: 25444
#           Attempting to use alternate WLF file "./wlftkx5ki3".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftkx5ki3
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# 
# //--------------------[ CICLO @ 20000 ]--------------------//
# PC: 00000000   |   Instruction: 00a00093
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 30000 ]--------------------//
# PC: 00000004   |   Instruction: 00a00113
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  1, rs1:  0, rs2: 10
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: xxxxxxxx
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 40000 ]--------------------//
# PC: 00000008   |   Instruction: 00209563
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  2, rs1:  0, rs2: 10
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 0000000a | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         10
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 50000 ]--------------------//
# PC: 0000000c   |   Instruction: 00000013
# -----------------------------------------------------------------
#   [ID] Opcode: 1100011 | tipo: B | rd: 10, rs1:  1, rs2:  2
#        Funct3: 001  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  2 | imm: 0000000a | pc: 00000004
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         10
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         10 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 60000 ]--------------------//
# PC: 00000010   |   Instruction: 00000013
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd: 10 | imm: 0000000a | pc: 00000008
#        Forward -> Fwd_A: 01, Fwd_B: 10
#        ULA Out -> C:         20
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         10 | val_B:          0 | rd:  2
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         10 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 70000 ]--------------------//
# PC: 00000014   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 0000000c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         20 | val_B:          0 | rd: 10
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         10 | Mem_Data:          0 | rd:  2
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 80000 ]--------------------//
# PC: 00000018   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000010
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         20 | Mem_Data:          0 | rd: 10
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 90000 ]--------------------//
# PC: 0000001c   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000014
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 100000 ]--------------------//
# PC: 00000020   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000018
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 110000 ]--------------------//
# PC: 00000024   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000001c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 120000 ]--------------------//
# PC: 00000028   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000020
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 130000 ]--------------------//
# PC: 0000002c   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000024
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 140000 ]--------------------//
# PC: 00000030   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000028
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 150000 ]--------------------//
# PC: 00000034   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000002c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 160000 ]--------------------//
# PC: 00000038   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000030
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 170000 ]--------------------//
# PC: 0000003c   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000034
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 180000 ]--------------------//
# PC: 00000040   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000038
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 190000 ]--------------------//
# PC: 00000044   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000003c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 200000 ]--------------------//
# PC: 00000048   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000040
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 210000 ]--------------------//
# PC: 0000004c   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000044
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 220000 ]--------------------//
# PC: 00000050   |   Instruction: xxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000048
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# --- Simulação Finalizada ---
# ** Note: $finish    : C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v(58)
#    Time: 230 ns  Iteration: 0  Instance: /tb_RV32i
# 1
# Break in Module tb_RV32i at C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v line 58
do R232i_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work".
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:56 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v 
# -- Compiling module ULA_controler
# 
# Top level modules:
# 	ULA_controler
# End time: 16:53:56 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:56 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v 
# -- Compiling module main_memory
# 
# Top level modules:
# 	main_memory
# End time: 16:53:56 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:57 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v 
# -- Compiling module MEM_WB
# 
# Top level modules:
# 	MEM_WB
# End time: 16:53:57 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:57 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v 
# -- Compiling module instruction_memory
# 
# Top level modules:
# 	instruction_memory
# End time: 16:53:57 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:57 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v 
# -- Compiling module hazard_detection_unit
# 
# Top level modules:
# 	hazard_detection_unit
# End time: 16:53:57 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:57 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v 
# -- Compiling module EX_MEM
# 
# Top level modules:
# 	EX_MEM
# End time: 16:53:57 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:58 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v 
# -- Compiling module ULA
# 
# Top level modules:
# 	ULA
# End time: 16:53:58 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:58 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v 
# -- Compiling module forward_unit
# 
# Top level modules:
# 	forward_unit
# End time: 16:53:58 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:58 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v 
# -- Compiling module register_bank
# 
# Top level modules:
# 	register_bank
# End time: 16:53:58 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:58 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v 
# -- Compiling module BranchDecider
# 
# Top level modules:
# 	BranchDecider
# End time: 16:53:58 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:58 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v 
# -- Compiling module ID_EX
# 
# Top level modules:
# 	ID_EX
# End time: 16:53:59 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:59 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v 
# -- Compiling module RV32i
# 
# Top level modules:
# 	RV32i
# End time: 16:53:59 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:59 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v 
# -- Compiling module IF_ID
# 
# Top level modules:
# 	IF_ID
# End time: 16:53:59 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:59 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v 
# -- Compiling module control
# 
# Top level modules:
# 	control
# End time: 16:53:59 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:53:59 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v 
# -- Compiling module PC
# 
# Top level modules:
# 	PC
# End time: 16:53:59 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:54:00 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v 
# -- Compiling module tb_RV32i
# 
# Top level modules:
# 	tb_RV32i
# End time: 16:54:00 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs="+acc"  tb_RV32i
# End time: 16:54:03 on Oct 30,2025, Elapsed time: 0:04:38
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs=""+acc"" tb_RV32i 
# Start time: 16:54:03 on Oct 30,2025
# Loading work.tb_RV32i
# Loading work.RV32i
# Loading work.PC
# Loading work.instruction_memory
# Loading work.IF_ID
# Loading work.control
# Loading work.hazard_detection_unit
# Loading work.register_bank
# Loading work.BranchDecider
# Loading work.ID_EX
# Loading work.forward_unit
# Loading work.ULA_controler
# Loading work.ULA
# Loading work.EX_MEM
# Loading work.main_memory
# Loading work.MEM_WB
# 
# add wave *
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: davi5  Hostname: DAVIALIENWARE  ProcessID: 25444
#           Attempting to use alternate WLF file "./wlft2rsjym".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlft2rsjym
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# 
# //--------------------[ CICLO @ 20000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 30000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000101000000000000100010011
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  1, rs1:  0, rs2: 10
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: xxxxxxxx
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 40000 ]--------------------//
# PC: 00000008   |   Instruction: 00000000001000001001010101100011
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  2, rs1:  0, rs2: 10
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 0000000a | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         10
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 50000 ]--------------------//
# PC: 0000000c   |   Instruction: 00000000000000000000000000010011
# -----------------------------------------------------------------
#   [ID] Opcode: 1100011 | tipo: B | rd: 10, rs1:  1, rs2:  2
#        Funct3: 001  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  2 | imm: 0000000a | pc: 00000004
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         10
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         10 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 60000 ]--------------------//
# PC: 00000010   |   Instruction: 00000000000000000000000000010011
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd: 10 | imm: 0000000a | pc: 00000008
#        Forward -> Fwd_A: 01, Fwd_B: 10
#        ULA Out -> C:         20
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         10 | val_B:          0 | rd:  2
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         10 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 70000 ]--------------------//
# PC: 00000014   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 0000000c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         20 | val_B:          0 | rd: 10
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         10 | Mem_Data:          0 | rd:  2
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 80000 ]--------------------//
# PC: 00000018   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000010
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         20 | Mem_Data:          0 | rd: 10
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 90000 ]--------------------//
# PC: 0000001c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000014
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 100000 ]--------------------//
# PC: 00000020   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000018
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 110000 ]--------------------//
# PC: 00000024   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000001c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 120000 ]--------------------//
# PC: 00000028   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000020
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 130000 ]--------------------//
# PC: 0000002c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000024
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 140000 ]--------------------//
# PC: 00000030   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000028
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 150000 ]--------------------//
# PC: 00000034   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000002c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 160000 ]--------------------//
# PC: 00000038   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000030
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 170000 ]--------------------//
# PC: 0000003c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000034
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 180000 ]--------------------//
# PC: 00000040   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000038
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 190000 ]--------------------//
# PC: 00000044   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000003c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 200000 ]--------------------//
# PC: 00000048   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000040
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 210000 ]--------------------//
# PC: 0000004c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000044
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 220000 ]--------------------//
# PC: 00000050   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000048
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# --- Simulação Finalizada ---
# ** Note: $finish    : C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v(58)
#    Time: 230 ns  Iteration: 0  Instance: /tb_RV32i
# 1
# Break in Module tb_RV32i at C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v line 58
do R232i_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work".
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:12 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v 
# -- Compiling module ULA_controler
# 
# Top level modules:
# 	ULA_controler
# End time: 16:56:12 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:12 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v 
# -- Compiling module main_memory
# 
# Top level modules:
# 	main_memory
# End time: 16:56:12 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:12 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v 
# -- Compiling module MEM_WB
# 
# Top level modules:
# 	MEM_WB
# End time: 16:56:12 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:13 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v 
# -- Compiling module instruction_memory
# 
# Top level modules:
# 	instruction_memory
# End time: 16:56:13 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:13 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v 
# -- Compiling module hazard_detection_unit
# 
# Top level modules:
# 	hazard_detection_unit
# End time: 16:56:13 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:13 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v 
# -- Compiling module EX_MEM
# 
# Top level modules:
# 	EX_MEM
# End time: 16:56:13 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:13 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v 
# -- Compiling module ULA
# 
# Top level modules:
# 	ULA
# End time: 16:56:13 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:13 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v 
# -- Compiling module forward_unit
# 
# Top level modules:
# 	forward_unit
# End time: 16:56:13 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:14 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v 
# -- Compiling module register_bank
# 
# Top level modules:
# 	register_bank
# End time: 16:56:14 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:14 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v 
# -- Compiling module BranchDecider
# 
# Top level modules:
# 	BranchDecider
# End time: 16:56:14 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:14 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v 
# -- Compiling module ID_EX
# 
# Top level modules:
# 	ID_EX
# End time: 16:56:14 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:14 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v 
# -- Compiling module RV32i
# 
# Top level modules:
# 	RV32i
# End time: 16:56:14 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:14 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v 
# -- Compiling module IF_ID
# 
# Top level modules:
# 	IF_ID
# End time: 16:56:14 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:15 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v 
# -- Compiling module control
# 
# Top level modules:
# 	control
# End time: 16:56:15 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:15 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v 
# -- Compiling module PC
# 
# Top level modules:
# 	PC
# End time: 16:56:15 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:15 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v 
# -- Compiling module tb_RV32i
# 
# Top level modules:
# 	tb_RV32i
# End time: 16:56:15 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs="+acc"  tb_RV32i
# End time: 16:56:17 on Oct 30,2025, Elapsed time: 0:02:14
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs=""+acc"" tb_RV32i 
# Start time: 16:56:18 on Oct 30,2025
# Loading work.tb_RV32i
# Loading work.RV32i
# Loading work.PC
# Loading work.instruction_memory
# Loading work.IF_ID
# Loading work.control
# Loading work.hazard_detection_unit
# Loading work.register_bank
# Loading work.BranchDecider
# Loading work.ID_EX
# Loading work.forward_unit
# Loading work.ULA_controler
# Loading work.ULA
# Loading work.EX_MEM
# Loading work.main_memory
# Loading work.MEM_WB
# 
# add wave *
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: davi5  Hostname: DAVIALIENWARE  ProcessID: 25444
#           Attempting to use alternate WLF file "./wlftath04d".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftath04d
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# 
# //--------------------[ CICLO @ 20000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 30000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 1101111 | tipo: J | rd:  1, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: xxxxxxxx
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 40000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 50000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 1101111 | tipo: J | rd:  1, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 60000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 70000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 1101111 | tipo: J | rd:  1, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 80000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 90000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 1101111 | tipo: J | rd:  1, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 100000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 110000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 1101111 | tipo: J | rd:  1, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 120000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 130000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 1101111 | tipo: J | rd:  1, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 140000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 150000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 1101111 | tipo: J | rd:  1, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 160000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 170000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 1101111 | tipo: J | rd:  1, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 180000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 190000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 1101111 | tipo: J | rd:  1, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 200000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 210000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 1101111 | tipo: J | rd:  1, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 220000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# --- Simulação Finalizada ---
# ** Note: $finish    : C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v(58)
#    Time: 230 ns  Iteration: 0  Instance: /tb_RV32i
# 1
# Break in Module tb_RV32i at C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v line 58
do R232i_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work".
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:27 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v 
# -- Compiling module ULA_controler
# 
# Top level modules:
# 	ULA_controler
# End time: 16:56:27 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:27 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v 
# -- Compiling module main_memory
# 
# Top level modules:
# 	main_memory
# End time: 16:56:27 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:27 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v 
# -- Compiling module MEM_WB
# 
# Top level modules:
# 	MEM_WB
# End time: 16:56:27 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:28 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v 
# -- Compiling module instruction_memory
# 
# Top level modules:
# 	instruction_memory
# End time: 16:56:28 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:28 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v 
# -- Compiling module hazard_detection_unit
# 
# Top level modules:
# 	hazard_detection_unit
# End time: 16:56:28 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:28 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v 
# -- Compiling module EX_MEM
# 
# Top level modules:
# 	EX_MEM
# End time: 16:56:28 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:28 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v 
# -- Compiling module ULA
# 
# Top level modules:
# 	ULA
# End time: 16:56:28 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:28 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v 
# -- Compiling module forward_unit
# 
# Top level modules:
# 	forward_unit
# End time: 16:56:28 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:29 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v 
# -- Compiling module register_bank
# 
# Top level modules:
# 	register_bank
# End time: 16:56:29 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:29 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v 
# -- Compiling module BranchDecider
# 
# Top level modules:
# 	BranchDecider
# End time: 16:56:29 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:29 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v 
# -- Compiling module ID_EX
# 
# Top level modules:
# 	ID_EX
# End time: 16:56:29 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:29 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v 
# -- Compiling module RV32i
# 
# Top level modules:
# 	RV32i
# End time: 16:56:29 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:29 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v 
# -- Compiling module IF_ID
# 
# Top level modules:
# 	IF_ID
# End time: 16:56:30 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:30 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v 
# -- Compiling module control
# 
# Top level modules:
# 	control
# End time: 16:56:30 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:30 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v 
# -- Compiling module PC
# 
# Top level modules:
# 	PC
# End time: 16:56:30 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:56:30 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v 
# -- Compiling module tb_RV32i
# 
# Top level modules:
# 	tb_RV32i
# End time: 16:56:30 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs="+acc"  tb_RV32i
# End time: 16:56:32 on Oct 30,2025, Elapsed time: 0:00:14
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs=""+acc"" tb_RV32i 
# Start time: 16:56:32 on Oct 30,2025
# Loading work.tb_RV32i
# Loading work.RV32i
# Loading work.PC
# Loading work.instruction_memory
# Loading work.IF_ID
# Loading work.control
# Loading work.hazard_detection_unit
# Loading work.register_bank
# Loading work.BranchDecider
# Loading work.ID_EX
# Loading work.forward_unit
# Loading work.ULA_controler
# Loading work.ULA
# Loading work.EX_MEM
# Loading work.main_memory
# Loading work.MEM_WB
# 
# add wave *
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: davi5  Hostname: DAVIALIENWARE  ProcessID: 25444
#           Attempting to use alternate WLF file "./wlft8ca2fz".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlft8ca2fz
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# 
# //--------------------[ CICLO @ 20000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 30000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000101000000000000100010011
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  1, rs1:  0, rs2: 10
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: xxxxxxxx
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 40000 ]--------------------//
# PC: 00000008   |   Instruction: 00000000001000001001010101100011
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  2, rs1:  0, rs2: 10
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 0000000a | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         10
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 50000 ]--------------------//
# PC: 0000000c   |   Instruction: 00000000000000000000000000010011
# -----------------------------------------------------------------
#   [ID] Opcode: 1100011 | tipo: B | rd: 10, rs1:  1, rs2:  2
#        Funct3: 001  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  2 | imm: 0000000a | pc: 00000004
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         10
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         10 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 60000 ]--------------------//
# PC: 00000010   |   Instruction: 00000000000000000000000000010011
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd: 10 | imm: 0000000a | pc: 00000008
#        Forward -> Fwd_A: 01, Fwd_B: 10
#        ULA Out -> C:         20
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         10 | val_B:          0 | rd:  2
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         10 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 70000 ]--------------------//
# PC: 00000014   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 0000000c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         20 | val_B:          0 | rd: 10
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         10 | Mem_Data:          0 | rd:  2
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 80000 ]--------------------//
# PC: 00000018   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000010
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         20 | Mem_Data:          0 | rd: 10
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 90000 ]--------------------//
# PC: 0000001c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000014
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 100000 ]--------------------//
# PC: 00000020   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000018
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 110000 ]--------------------//
# PC: 00000024   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000001c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 120000 ]--------------------//
# PC: 00000028   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000020
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 130000 ]--------------------//
# PC: 0000002c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000024
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 140000 ]--------------------//
# PC: 00000030   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000028
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 150000 ]--------------------//
# PC: 00000034   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000002c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 160000 ]--------------------//
# PC: 00000038   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000030
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 170000 ]--------------------//
# PC: 0000003c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000034
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 180000 ]--------------------//
# PC: 00000040   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000038
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 190000 ]--------------------//
# PC: 00000044   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000003c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 200000 ]--------------------//
# PC: 00000048   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000040
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 210000 ]--------------------//
# PC: 0000004c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000044
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 220000 ]--------------------//
# PC: 00000050   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000048
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# --- Simulação Finalizada ---
# ** Note: $finish    : C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v(58)
#    Time: 230 ns  Iteration: 0  Instance: /tb_RV32i
# 1
# Break in Module tb_RV32i at C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v line 58
do R232i_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work".
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:17 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v 
# -- Compiling module ULA_controler
# 
# Top level modules:
# 	ULA_controler
# End time: 16:58:17 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:18 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v 
# -- Compiling module main_memory
# 
# Top level modules:
# 	main_memory
# End time: 16:58:18 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:18 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v 
# -- Compiling module MEM_WB
# 
# Top level modules:
# 	MEM_WB
# End time: 16:58:18 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:18 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v 
# -- Compiling module instruction_memory
# 
# Top level modules:
# 	instruction_memory
# End time: 16:58:18 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:18 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v 
# -- Compiling module hazard_detection_unit
# 
# Top level modules:
# 	hazard_detection_unit
# End time: 16:58:18 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:18 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v 
# -- Compiling module EX_MEM
# 
# Top level modules:
# 	EX_MEM
# End time: 16:58:19 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:19 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v 
# -- Compiling module ULA
# 
# Top level modules:
# 	ULA
# End time: 16:58:19 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:19 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v 
# -- Compiling module forward_unit
# 
# Top level modules:
# 	forward_unit
# End time: 16:58:19 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:19 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v 
# -- Compiling module register_bank
# 
# Top level modules:
# 	register_bank
# End time: 16:58:19 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:19 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v 
# -- Compiling module BranchDecider
# 
# Top level modules:
# 	BranchDecider
# End time: 16:58:19 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:19 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v 
# -- Compiling module ID_EX
# 
# Top level modules:
# 	ID_EX
# End time: 16:58:20 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:20 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v 
# -- Compiling module RV32i
# 
# Top level modules:
# 	RV32i
# End time: 16:58:20 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:20 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v 
# -- Compiling module IF_ID
# 
# Top level modules:
# 	IF_ID
# End time: 16:58:20 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:20 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v 
# -- Compiling module control
# 
# Top level modules:
# 	control
# End time: 16:58:20 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:21 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v 
# -- Compiling module PC
# 
# Top level modules:
# 	PC
# End time: 16:58:21 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:58:21 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v 
# -- Compiling module tb_RV32i
# 
# Top level modules:
# 	tb_RV32i
# End time: 16:58:21 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs="+acc"  tb_RV32i
# End time: 16:58:23 on Oct 30,2025, Elapsed time: 0:01:51
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs=""+acc"" tb_RV32i 
# Start time: 16:58:23 on Oct 30,2025
# Loading work.tb_RV32i
# Loading work.RV32i
# Loading work.PC
# Loading work.instruction_memory
# Loading work.IF_ID
# Loading work.control
# Loading work.hazard_detection_unit
# Loading work.register_bank
# Loading work.BranchDecider
# Loading work.ID_EX
# Loading work.forward_unit
# Loading work.ULA_controler
# Loading work.ULA
# Loading work.EX_MEM
# Loading work.main_memory
# Loading work.MEM_WB
# 
# add wave *
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: davi5  Hostname: DAVIALIENWARE  ProcessID: 25444
#           Attempting to use alternate WLF file "./wlftkzzecf".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftkzzecf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# 
# //--------------------[ CICLO @ 20000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 30000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000101000000000000100010011
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  1, rs1:  0, rs2: 10
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: xxxxxxxx
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 40000 ]--------------------//
# PC: 00000008   |   Instruction: 00000000001000001000100001100011
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  2, rs1:  0, rs2: 10
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 0000000a | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         10
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 50000 ]--------------------//
# PC: 0000000c   |   Instruction: 00000001101000000000000010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 1100011 | tipo: B | rd: 16, rs1:  1, rs2:  2
#        Funct3: 000  | Funct7: 0000000 | Branch: 1
#        Imm Gen: 00000010
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  2 | imm: 0000000a | pc: 00000004
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         10
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         10 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 60000 ]--------------------//
# PC: 00000010   |   Instruction: 00000000001000001000000110110011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd: 16 | imm: 00000010 | pc: 00000008
#        Forward -> Fwd_A: 01, Fwd_B: 10
#        ULA Out -> C:         26
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         10 | val_B:          0 | rd:  2
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         10 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 70000 ]--------------------//
# PC: 00000014   |   Instruction: 01000000001000001000001000110011
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  3, rs1:  1, rs2:  2
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:         10 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         26 | val_B:          0 | rd: 16
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         10 | Mem_Data:          0 | rd:  2
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 80000 ]--------------------//
# PC: 00000018   |   Instruction: 00000000111100001111001010010011
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  4, rs1:  1, rs2:  2
#        Funct3: 000  | Funct7: 0100000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:         10 | B:         10
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 10, PcULA: 0
#        Data    -> val_A:         10 | val_B:          0 | rd:  3 | imm: 00000000 | pc: 00000010
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         10
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         26 | Mem_Data:          0 | rd: 16
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 90000 ]--------------------//
# PC: 0000001c   |   Instruction: 10101011110011011110001100110111
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  5, rs1:  1, rs2: 15
#        Funct3: 111  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000f
#        RegBank Read -> A:         10 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 10, PcULA: 0
#        Data    -> val_A:         10 | val_B:         10 | rd:  4 | imm: 00000000 | pc: 00000014
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         10 | val_B:          0 | rd:  3
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 100000 ]--------------------//
# PC: 00000020   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: 0110111 | tipo: U | rd:  6, rs1: 27, rs2: 28
#        Funct3: 110  | Funct7: 1010101 | Branch: 0
#        Imm Gen: abcde000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:         10 | val_B:          0 | rd:  5 | imm: 0000000f | pc: 00000018
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         10
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:         10 | rd:  4
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         10 | Mem_Data:          0 | rd:  3
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 110000 ]--------------------//
# PC: 00000024   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  6 | imm: abcde000 | pc: 0000001c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C: 2882396188
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         10 | val_B:          0 | rd:  5
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  4
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 10 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 120000 ]--------------------//
# PC: 00000028   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000020
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res: 2882396188 | val_B:          0 | rd:  6
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         10 | Mem_Data:          0 | rd:  5
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 10 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 130000 ]--------------------//
# PC: 0000002c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000024
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res: 2882396188 | Mem_Data:          0 | rd:  6
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 10 reg4: 0 reg5: 10 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 140000 ]--------------------//
# PC: 00000030   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000028
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 10 reg4: 0 reg5: 10 reg6: 2882396188, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 150000 ]--------------------//
# PC: 00000034   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000002c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 10 reg4: 0 reg5: 10 reg6: 2882396188, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 160000 ]--------------------//
# PC: 00000038   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000030
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 10 reg4: 0 reg5: 10 reg6: 2882396188, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 170000 ]--------------------//
# PC: 0000003c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000034
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 10 reg4: 0 reg5: 10 reg6: 2882396188, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 180000 ]--------------------//
# PC: 00000040   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000038
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 10 reg4: 0 reg5: 10 reg6: 2882396188, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 190000 ]--------------------//
# PC: 00000044   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000003c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 10 reg4: 0 reg5: 10 reg6: 2882396188, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 200000 ]--------------------//
# PC: 00000048   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000040
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 10 reg4: 0 reg5: 10 reg6: 2882396188, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 210000 ]--------------------//
# PC: 0000004c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000044
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 10 reg4: 0 reg5: 10 reg6: 2882396188, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 220000 ]--------------------//
# PC: 00000050   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000048
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 10 reg2: 10 reg3: 10 reg4: 0 reg5: 10 reg6: 2882396188, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# --- Simulação Finalizada ---
# ** Note: $finish    : C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v(58)
#    Time: 230 ns  Iteration: 0  Instance: /tb_RV32i
# 1
# Break in Module tb_RV32i at C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v line 58
do R232i_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work".
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:01 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v 
# -- Compiling module ULA_controler
# 
# Top level modules:
# 	ULA_controler
# End time: 17:07:01 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:02 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v 
# -- Compiling module main_memory
# 
# Top level modules:
# 	main_memory
# End time: 17:07:02 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:02 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v 
# -- Compiling module MEM_WB
# 
# Top level modules:
# 	MEM_WB
# End time: 17:07:02 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:03 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v 
# -- Compiling module instruction_memory
# 
# Top level modules:
# 	instruction_memory
# End time: 17:07:03 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:03 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v 
# -- Compiling module hazard_detection_unit
# 
# Top level modules:
# 	hazard_detection_unit
# End time: 17:07:03 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:03 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v 
# -- Compiling module EX_MEM
# 
# Top level modules:
# 	EX_MEM
# End time: 17:07:03 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:03 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v 
# -- Compiling module ULA
# 
# Top level modules:
# 	ULA
# End time: 17:07:03 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:03 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v 
# -- Compiling module forward_unit
# 
# Top level modules:
# 	forward_unit
# End time: 17:07:04 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:04 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v 
# -- Compiling module register_bank
# 
# Top level modules:
# 	register_bank
# End time: 17:07:04 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:04 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v 
# -- Compiling module BranchDecider
# 
# Top level modules:
# 	BranchDecider
# End time: 17:07:04 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:04 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v 
# -- Compiling module ID_EX
# 
# Top level modules:
# 	ID_EX
# End time: 17:07:04 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:04 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v 
# -- Compiling module RV32i
# 
# Top level modules:
# 	RV32i
# End time: 17:07:04 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:05 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v 
# -- Compiling module IF_ID
# 
# Top level modules:
# 	IF_ID
# End time: 17:07:05 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:05 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v 
# -- Compiling module control
# 
# Top level modules:
# 	control
# End time: 17:07:05 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:05 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v 
# -- Compiling module PC
# 
# Top level modules:
# 	PC
# End time: 17:07:05 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:05 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v 
# -- Compiling module tb_RV32i
# 
# Top level modules:
# 	tb_RV32i
# End time: 17:07:05 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs="+acc"  tb_RV32i
# End time: 17:07:09 on Oct 30,2025, Elapsed time: 0:08:46
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs=""+acc"" tb_RV32i 
# Start time: 17:07:09 on Oct 30,2025
# Loading work.tb_RV32i
# Loading work.RV32i
# Loading work.PC
# Loading work.instruction_memory
# Loading work.IF_ID
# Loading work.control
# Loading work.hazard_detection_unit
# Loading work.register_bank
# Loading work.BranchDecider
# Loading work.ID_EX
# Loading work.forward_unit
# Loading work.ULA_controler
# Loading work.ULA
# Loading work.EX_MEM
# Loading work.main_memory
# Loading work.MEM_WB
# 
# add wave *
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: davi5  Hostname: DAVIALIENWARE  ProcessID: 25444
#           Attempting to use alternate WLF file "./wlfthert5n".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlfthert5n
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# 
# //--------------------[ CICLO @ 20000 ]--------------------//
# PC: 00000000   |   Instruction: 00000001000000001010000110000011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 30000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000001000011000000010110011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000011 | tipo: I | rd:  3, rs1:  1, rs2: 16
#        Funct3: 010  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000010
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: xxxxxxxx
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 40000 ]--------------------//
# PC: 00000008   |   Instruction: 00000000101000000000000100010011
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  1, rs1:  3, rs2:  2
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  3 | imm: 00000010 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         16
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 50000 ]--------------------//
# PC: 00000008   |   Instruction: 00000000101000000000000100010011
# -----------------------------------------------------------------
#   [ID] Opcode: 0110011 | tipo: R | rd:  1, rs1:  3, rs2:  2
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000000 | pc: 00000004
#        Forward -> Fwd_A: 10, Fwd_B: 00
#        ULA Out -> C:         16
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1
#         Data    -> ULA_Res:         16 | val_B:          0 | rd:  3
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 60000 ]--------------------//
# PC: 0000000c   |   Instruction: 00000000101000000000000100010011
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  2, rs1:  0, rs2: 10
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000000 | pc: 00000004
#        Forward -> Fwd_A: 01, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         16 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 1
#        Data    -> ULA_Res:         16 | Mem_Data:          0 | rd:  3
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 70000 ]--------------------//
# PC: 00000010   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: 0010011 | tipo: I | rd:  2, rs1:  0, rs2: 10
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 0000000a
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  2 | imm: 0000000a | pc: 00000008
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         10
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:         16 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 80000 ]--------------------//
# PC: 00000014   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 10, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  2 | imm: 0000000a | pc: 0000000c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         10
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         10 | val_B:          0 | rd:  2
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 90000 ]--------------------//
# PC: 00000018   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000010
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:         10 | val_B:          0 | rd:  2
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         10 | Mem_Data:          0 | rd:  2
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 100000 ]--------------------//
# PC: 0000001c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000014
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:         10 | Mem_Data:          0 | rd:  2
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 110000 ]--------------------//
# PC: 00000020   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000018
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 120000 ]--------------------//
# PC: 00000024   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000001c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 130000 ]--------------------//
# PC: 00000028   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000020
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 140000 ]--------------------//
# PC: 0000002c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000024
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 150000 ]--------------------//
# PC: 00000030   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000028
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 160000 ]--------------------//
# PC: 00000034   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000002c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 170000 ]--------------------//
# PC: 00000038   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000030
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 180000 ]--------------------//
# PC: 0000003c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000034
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 190000 ]--------------------//
# PC: 00000040   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000038
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 200000 ]--------------------//
# PC: 00000044   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000003c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 210000 ]--------------------//
# PC: 00000048   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000040
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 220000 ]--------------------//
# PC: 0000004c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000044
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 10 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# --- Simulação Finalizada ---
# ** Note: $finish    : C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v(58)
#    Time: 230 ns  Iteration: 0  Instance: /tb_RV32i
# 1
# Break in Module tb_RV32i at C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v line 58
do R232i_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work".
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:09 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v 
# -- Compiling module ULA_controler
# 
# Top level modules:
# 	ULA_controler
# End time: 17:11:09 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:09 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v 
# -- Compiling module main_memory
# 
# Top level modules:
# 	main_memory
# End time: 17:11:09 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:09 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v 
# -- Compiling module MEM_WB
# 
# Top level modules:
# 	MEM_WB
# End time: 17:11:09 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:09 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v 
# -- Compiling module instruction_memory
# 
# Top level modules:
# 	instruction_memory
# End time: 17:11:09 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:10 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v 
# -- Compiling module hazard_detection_unit
# 
# Top level modules:
# 	hazard_detection_unit
# End time: 17:11:10 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:10 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v 
# -- Compiling module EX_MEM
# 
# Top level modules:
# 	EX_MEM
# End time: 17:11:10 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:10 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v 
# -- Compiling module ULA
# 
# Top level modules:
# 	ULA
# End time: 17:11:10 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:10 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v 
# -- Compiling module forward_unit
# 
# Top level modules:
# 	forward_unit
# End time: 17:11:10 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:10 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v 
# -- Compiling module register_bank
# 
# Top level modules:
# 	register_bank
# End time: 17:11:11 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:11 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v 
# -- Compiling module BranchDecider
# 
# Top level modules:
# 	BranchDecider
# End time: 17:11:11 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:11 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v 
# -- Compiling module ID_EX
# 
# Top level modules:
# 	ID_EX
# End time: 17:11:11 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:11 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v 
# -- Compiling module RV32i
# 
# Top level modules:
# 	RV32i
# End time: 17:11:11 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:11 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v 
# -- Compiling module IF_ID
# 
# Top level modules:
# 	IF_ID
# End time: 17:11:12 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:12 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v 
# -- Compiling module control
# 
# Top level modules:
# 	control
# End time: 17:11:12 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:12 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v 
# -- Compiling module PC
# 
# Top level modules:
# 	PC
# End time: 17:11:12 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:11:12 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v 
# -- Compiling module tb_RV32i
# 
# Top level modules:
# 	tb_RV32i
# End time: 17:11:12 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs="+acc"  tb_RV32i
# End time: 17:11:15 on Oct 30,2025, Elapsed time: 0:04:06
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs=""+acc"" tb_RV32i 
# Start time: 17:11:15 on Oct 30,2025
# Loading work.tb_RV32i
# Loading work.RV32i
# Loading work.PC
# Loading work.instruction_memory
# Loading work.IF_ID
# Loading work.control
# Loading work.hazard_detection_unit
# Loading work.register_bank
# Loading work.BranchDecider
# Loading work.ID_EX
# Loading work.forward_unit
# Loading work.ULA_controler
# Loading work.ULA
# Loading work.EX_MEM
# Loading work.main_memory
# Loading work.MEM_WB
# 
# add wave *
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: davi5  Hostname: DAVIALIENWARE  ProcessID: 25444
#           Attempting to use alternate WLF file "./wlft54zi1r".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlft54zi1r
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# 
# //--------------------[ CICLO @ 20000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000001000000011100111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 30000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000100000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 1100111 | tipo: I | rd:  1, rs1:  1, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: xxxxxxxx
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 40000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000001000000011100111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 50000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000100000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 1100111 | tipo: I | rd:  1, rs1:  1, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 60000 ]--------------------//
# PC: 00000000   |   Instruction: 00000000000000001000000011100111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 01, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 70000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000100000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 1100111 | tipo: I | rd:  1, rs1:  1, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          4 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 80000 ]--------------------//
# PC: 00000004   |   Instruction: 00000000100000000000000011101111
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          4 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000000
#        Forward -> Fwd_A: 01, Fwd_B: 00
#        ULA Out -> C:          4
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 90000 ]--------------------//
# PC: 00000008   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 1101111 | tipo: J | rd:  1, rs1:  0, rs2:  8
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000008
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          4 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 100000 ]--------------------//
# PC: 0000000c   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 1, ULAOp: 00, PcULA: 1
#        Data    -> val_A:          0 | val_B:          0 | rd:  1 | imm: 00000004 | pc: 00000004
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          8
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          4 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 110000 ]--------------------//
# PC: 00000010   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          8 | val_B:          0 | rd:  1
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 120000 ]--------------------//
# PC: 00000014   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 0000000c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 0
#        Data    -> ULA_Res:          8 | Mem_Data:          0 | rd:  1
# -----------------------------------------------------------------
# reg0: 0 reg1: 4 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 130000 ]--------------------//
# PC: 00000018   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000010
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 8 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 140000 ]--------------------//
# PC: 0000001c   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000014
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 8 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 150000 ]--------------------//
# PC: 00000020   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000018
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 8 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 160000 ]--------------------//
# PC: 00000024   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 0000001c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 8 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 170000 ]--------------------//
# PC: 00000028   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000020
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 8 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 180000 ]--------------------//
# PC: 0000002c   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000024
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 8 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 190000 ]--------------------//
# PC: 00000030   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000028
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 8 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 200000 ]--------------------//
# PC: 00000034   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 0000002c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 8 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 210000 ]--------------------//
# PC: 00000038   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000030
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 8 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 220000 ]--------------------//
# PC: 0000003c   |   Instruction: 00000000000000000000000000000000
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000034
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 8 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# --- Simulação Finalizada ---
# ** Note: $finish    : C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v(58)
#    Time: 230 ns  Iteration: 0  Instance: /tb_RV32i
# 1
# Break in Module tb_RV32i at C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v line 58
do R232i_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work".
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:38 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v 
# -- Compiling module ULA_controler
# 
# Top level modules:
# 	ULA_controler
# End time: 17:13:39 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:39 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v 
# -- Compiling module main_memory
# 
# Top level modules:
# 	main_memory
# End time: 17:13:39 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:39 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v 
# -- Compiling module MEM_WB
# 
# Top level modules:
# 	MEM_WB
# End time: 17:13:39 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:39 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v 
# -- Compiling module instruction_memory
# 
# Top level modules:
# 	instruction_memory
# End time: 17:13:39 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:39 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v 
# -- Compiling module hazard_detection_unit
# 
# Top level modules:
# 	hazard_detection_unit
# End time: 17:13:39 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:39 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v 
# -- Compiling module EX_MEM
# 
# Top level modules:
# 	EX_MEM
# End time: 17:13:40 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:40 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v 
# -- Compiling module ULA
# 
# Top level modules:
# 	ULA
# End time: 17:13:40 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:40 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v 
# -- Compiling module forward_unit
# 
# Top level modules:
# 	forward_unit
# End time: 17:13:40 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:40 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v 
# -- Compiling module register_bank
# 
# Top level modules:
# 	register_bank
# End time: 17:13:40 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:40 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v 
# -- Compiling module BranchDecider
# 
# Top level modules:
# 	BranchDecider
# End time: 17:13:40 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:40 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v 
# -- Compiling module ID_EX
# 
# Top level modules:
# 	ID_EX
# End time: 17:13:41 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:41 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v 
# -- Compiling module RV32i
# 
# Top level modules:
# 	RV32i
# End time: 17:13:41 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:41 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v 
# -- Compiling module IF_ID
# 
# Top level modules:
# 	IF_ID
# End time: 17:13:41 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:41 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v 
# -- Compiling module control
# 
# Top level modules:
# 	control
# End time: 17:13:41 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:42 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v 
# -- Compiling module PC
# 
# Top level modules:
# 	PC
# End time: 17:13:42 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:42 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v 
# -- Compiling module tb_RV32i
# 
# Top level modules:
# 	tb_RV32i
# End time: 17:13:42 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs="+acc"  tb_RV32i
# End time: 17:13:44 on Oct 30,2025, Elapsed time: 0:02:29
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs=""+acc"" tb_RV32i 
# Start time: 17:13:44 on Oct 30,2025
# Loading work.tb_RV32i
# Loading work.RV32i
# Loading work.PC
# Loading work.instruction_memory
# Loading work.IF_ID
# Loading work.control
# Loading work.hazard_detection_unit
# Loading work.register_bank
# Loading work.BranchDecider
# Loading work.ID_EX
# Loading work.forward_unit
# Loading work.ULA_controler
# Loading work.ULA
# Loading work.EX_MEM
# Loading work.main_memory
# Loading work.MEM_WB
# 
# add wave *
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: davi5  Hostname: DAVIALIENWARE  ProcessID: 25444
#           Attempting to use alternate WLF file "./wlftiw7t5v".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftiw7t5v
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# 
# //--------------------[ CICLO @ 20000 ]--------------------//
# PC: 00000000   |   Instruction: 00000001000000001000000110000011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 30000 ]--------------------//
# PC: 00000004   |   Instruction: 00000001000000001001000110000011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000011 | tipo: I | rd:  3, rs1:  1, rs2: 16
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000010
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: xxxxxxxx
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 40000 ]--------------------//
# PC: 00000008   |   Instruction: 00000001000000001010000110000011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000011 | tipo: I | rd:  3, rs1:  1, rs2: 16
#        Funct3: 001  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000010
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  3 | imm: 00000010 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         16
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 50000 ]--------------------//
# PC: 0000000c   |   Instruction: 00000001000000001100000110000011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000011 | tipo: I | rd:  3, rs1:  1, rs2: 16
#        Funct3: 010  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000010
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  3 | imm: 00000010 | pc: 00000004
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         16
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1
#         Data    -> ULA_Res:         16 | val_B:          0 | rd:  3
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 60000 ]--------------------//
# PC: 00000010   |   Instruction: 00000001000000001101000110000011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000011 | tipo: I | rd:  3, rs1:  1, rs2: 16
#        Funct3: 100  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000010
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  3 | imm: 00000010 | pc: 00000008
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         16
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1
#         Data    -> ULA_Res:         16 | val_B:          0 | rd:  3
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 1
#        Data    -> ULA_Res:         16 | Mem_Data:          0 | rd:  3
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 70000 ]--------------------//
# PC: 00000014   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: 0000011 | tipo: I | rd:  3, rs1:  1, rs2: 16
#        Funct3: 101  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000010
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  3 | imm: 00000010 | pc: 0000000c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         16
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1
#         Data    -> ULA_Res:         16 | val_B:          0 | rd:  3
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 1
#        Data    -> ULA_Res:         16 | Mem_Data:          0 | rd:  3
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 80000 ]--------------------//
# PC: 00000018   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  3 | imm: 00000010 | pc: 00000010
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         16
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1
#         Data    -> ULA_Res:         16 | val_B:          0 | rd:  3
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 1
#        Data    -> ULA_Res:         16 | Mem_Data:          0 | rd:  3
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 90000 ]--------------------//
# PC: 0000001c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000014
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1
#         Data    -> ULA_Res:         16 | val_B:          0 | rd:  3
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 1
#        Data    -> ULA_Res:         16 | Mem_Data:          0 | rd:  3
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 100000 ]--------------------//
# PC: 00000020   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000018
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 1
#        Data    -> ULA_Res:         16 | Mem_Data:          0 | rd:  3
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 110000 ]--------------------//
# PC: 00000024   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000001c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 120000 ]--------------------//
# PC: 00000028   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000020
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 130000 ]--------------------//
# PC: 0000002c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000024
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 140000 ]--------------------//
# PC: 00000030   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000028
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 150000 ]--------------------//
# PC: 00000034   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000002c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 160000 ]--------------------//
# PC: 00000038   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000030
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 170000 ]--------------------//
# PC: 0000003c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000034
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 180000 ]--------------------//
# PC: 00000040   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000038
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 190000 ]--------------------//
# PC: 00000044   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000003c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 200000 ]--------------------//
# PC: 00000048   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000040
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 210000 ]--------------------//
# PC: 0000004c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000044
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 220000 ]--------------------//
# PC: 00000050   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000048
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# --- Simulação Finalizada ---
# ** Note: $finish    : C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v(58)
#    Time: 230 ns  Iteration: 0  Instance: /tb_RV32i
# 1
# Break in Module tb_RV32i at C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v line 58
do R232i_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/rtl_work".
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:58 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Ula_controler.v 
# -- Compiling module ULA_controler
# 
# Top level modules:
# 	ULA_controler
# End time: 17:14:58 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:58 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/main_memory.v 
# -- Compiling module main_memory
# 
# Top level modules:
# 	main_memory
# End time: 17:14:58 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:58 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/MEM_WB.v 
# -- Compiling module MEM_WB
# 
# Top level modules:
# 	MEM_WB
# End time: 17:14:58 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:58 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/instruction_memory.v 
# -- Compiling module instruction_memory
# 
# Top level modules:
# 	instruction_memory
# End time: 17:14:58 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:58 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/hazard_detection_unit.v 
# -- Compiling module hazard_detection_unit
# 
# Top level modules:
# 	hazard_detection_unit
# End time: 17:14:59 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:59 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/EX_MEM.v 
# -- Compiling module EX_MEM
# 
# Top level modules:
# 	EX_MEM
# End time: 17:14:59 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:59 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ULA.v 
# -- Compiling module ULA
# 
# Top level modules:
# 	ULA
# End time: 17:14:59 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:59 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/forward_unit.v 
# -- Compiling module forward_unit
# 
# Top level modules:
# 	forward_unit
# End time: 17:14:59 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:59 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/register_bank.v 
# -- Compiling module register_bank
# 
# Top level modules:
# 	register_bank
# End time: 17:14:59 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:15:00 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/Branch Decider.v 
# -- Compiling module BranchDecider
# 
# Top level modules:
# 	BranchDecider
# End time: 17:15:00 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:15:00 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/ID_EX.v 
# -- Compiling module ID_EX
# 
# Top level modules:
# 	ID_EX
# End time: 17:15:00 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:15:00 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/RV32i.v 
# -- Compiling module RV32i
# 
# Top level modules:
# 	RV32i
# End time: 17:15:00 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:15:00 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/IF_ID.v 
# -- Compiling module IF_ID
# 
# Top level modules:
# 	IF_ID
# End time: 17:15:00 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:15:00 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/control.v 
# -- Compiling module control
# 
# Top level modules:
# 	control
# End time: 17:15:00 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:15:00 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/verilog_code/PC.v 
# -- Compiling module PC
# 
# Top level modules:
# 	PC
# End time: 17:15:01 on Oct 30,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim {C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:15:01 on Oct 30,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim" C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v 
# -- Compiling module tb_RV32i
# 
# Top level modules:
# 	tb_RV32i
# End time: 17:15:01 on Oct 30,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs="+acc"  tb_RV32i
# End time: 17:15:02 on Oct 30,2025, Elapsed time: 0:01:18
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs=""+acc"" tb_RV32i 
# Start time: 17:15:02 on Oct 30,2025
# Loading work.tb_RV32i
# Loading work.RV32i
# Loading work.PC
# Loading work.instruction_memory
# Loading work.IF_ID
# Loading work.control
# Loading work.hazard_detection_unit
# Loading work.register_bank
# Loading work.BranchDecider
# Loading work.ID_EX
# Loading work.forward_unit
# Loading work.ULA_controler
# Loading work.ULA
# Loading work.EX_MEM
# Loading work.main_memory
# Loading work.MEM_WB
# 
# add wave *
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: davi5  Hostname: DAVIALIENWARE  ProcessID: 25444
#           Attempting to use alternate WLF file "./wlftewf66b".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftewf66b
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# 
# //--------------------[ CICLO @ 20000 ]--------------------//
# PC: 00000000   |   Instruction: 00000001000000001000000110000011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000000 | tipo: ? | rd:  0, rs1:  0, rs2:  0
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 30000 ]--------------------//
# PC: 00000004   |   Instruction: 00000001000000001001000110000011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000011 | tipo: I | rd:  3, rs1:  1, rs2: 16
#        Funct3: 000  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000010
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  0 | imm: 00000000 | pc: xxxxxxxx
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          0
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 40000 ]--------------------//
# PC: 00000008   |   Instruction: 00000001000000001010000110000011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000011 | tipo: I | rd:  3, rs1:  1, rs2: 16
#        Funct3: 001  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000010
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  3 | imm: 00000010 | pc: 00000000
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         16
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          0 | val_B:          0 | rd:  0
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 50000 ]--------------------//
# PC: 0000000c   |   Instruction: 00000001000000001100000110000011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000011 | tipo: I | rd:  3, rs1:  1, rs2: 16
#        Funct3: 010  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000010
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  3 | imm: 00000010 | pc: 00000004
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         16
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1
#         Data    -> ULA_Res:         16 | val_B:          0 | rd:  3
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          0 | Mem_Data:          0 | rd:  0
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 60000 ]--------------------//
# PC: 00000010   |   Instruction: 00000001000000001101000110000011
# -----------------------------------------------------------------
#   [ID] Opcode: 0000011 | tipo: I | rd:  3, rs1:  1, rs2: 16
#        Funct3: 100  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000010
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  3 | imm: 00000010 | pc: 00000008
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         16
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1
#         Data    -> ULA_Res:         16 | val_B:          0 | rd:  3
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 1
#        Data    -> ULA_Res:         16 | Mem_Data:         64 | rd:  3
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 0 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 70000 ]--------------------//
# PC: 00000014   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: 0000011 | tipo: I | rd:  3, rs1:  1, rs2: 16
#        Funct3: 101  | Funct7: 0000000 | Branch: 0
#        Imm Gen: 00000010
#        RegBank Read -> A:          0 | B:          0
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  3 | imm: 00000010 | pc: 0000000c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         16
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1
#         Data    -> ULA_Res:         16 | val_B:          0 | rd:  3
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 1
#        Data    -> ULA_Res:         16 | Mem_Data:      16384 | rd:  3
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 64 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 80000 ]--------------------//
# PC: 00000018   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1, MuxULA: 1, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          0 | val_B:          0 | rd:  3 | imm: 00000010 | pc: 00000010
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:         16
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1
#         Data    -> ULA_Res:         16 | val_B:          0 | rd:  3
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 1
#        Data    -> ULA_Res:         16 | Mem_Data: 1073741824 | rd:  3
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 16384 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 90000 ]--------------------//
# PC: 0000001c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000014
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 1, MemRd: 1, MemWr: 0, MuxReg: 1
#         Data    -> ULA_Res:         16 | val_B:          0 | rd:  3
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 1
#        Data    -> ULA_Res:         16 | Mem_Data:         64 | rd:  3
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 1073741824 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 100000 ]--------------------//
# PC: 00000020   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000018
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 1, MuxReg: 1
#        Data    -> ULA_Res:         16 | Mem_Data:      16384 | rd:  3
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 64 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 110000 ]--------------------//
# PC: 00000024   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000001c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 16384 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 120000 ]--------------------//
# PC: 00000028   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000020
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 16384 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 130000 ]--------------------//
# PC: 0000002c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000024
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 16384 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 140000 ]--------------------//
# PC: 00000030   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000028
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 16384 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 150000 ]--------------------//
# PC: 00000034   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000002c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 16384 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 160000 ]--------------------//
# PC: 00000038   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000030
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 16384 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 170000 ]--------------------//
# PC: 0000003c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000034
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 16384 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 180000 ]--------------------//
# PC: 00000040   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000038
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 16384 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 190000 ]--------------------//
# PC: 00000044   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 0000003c
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 16384 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 200000 ]--------------------//
# PC: 00000048   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000040
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 16384 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 210000 ]--------------------//
# PC: 0000004c   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000044
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 16384 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# //--------------------[ CICLO @ 220000 ]--------------------//
# PC: 00000050   |   Instruction: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# -----------------------------------------------------------------
#   [ID] Opcode: xxxxxxx | tipo: ? | rd:  x, rs1:  x, rs2:  x
#        Funct3: xxx  | Funct7: xxxxxxx | Branch: 0
#        Imm Gen: 00000000
#        RegBank Read -> A:          x | B:          x
# -----------------------------------------------------------------
#   [EX] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0, MuxULA: 0, ULAOp: 00, PcULA: 0
#        Data    -> val_A:          x | val_B:          x | rd:  x | imm: 00000000 | pc: 00000048
#        Forward -> Fwd_A: 00, Fwd_B: 00
#        ULA Out -> C:          x
# -----------------------------------------------------------------
#   [MEM] Control -> RegWr: 0, MemRd: 0, MemWr: 0, MuxReg: 0
#         Data    -> ULA_Res:          x | val_B:          x | rd:  x
# -----------------------------------------------------------------
#   [WB] Control -> RegWr: 0, MuxReg: 0
#        Data    -> ULA_Res:          x | Mem_Data:          0 | rd:  x
# -----------------------------------------------------------------
# reg0: 0 reg1: 0 reg2: 0 reg3: 16384 reg4: 0 reg5: 0 reg6: 0, reg7: 0, reg8: 0
# mem0: 0 mem1: 0 mem2: 0 mem3: 0 mem4: 0 mem5: 0 mem6: 0, mem7: 4, mem8: 0
# 
# --- Simulação Finalizada ---
# ** Note: $finish    : C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v(58)
#    Time: 230 ns  Iteration: 0  Instance: /tb_RV32i
# 1
# Break in Module tb_RV32i at C:/Users/davi5/UFPI/4_periodo/Topicos/Risc-v-R232I-pipeline-/simulation/modelsim/tb_RV32i.v line 58
